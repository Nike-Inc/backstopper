package com.nike.backstopper.service;

import com.nike.backstopper.apierror.ApiError;
import com.nike.backstopper.exception.AutoGeneratedApiErrorServiceException;
import com.nike.backstopper.mapper.ApiErrorValidationMessagesMapper;
import com.nike.backstopper.model.AutoGeneratedApiError;
import org.junit.Test;

import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Matchers.anySetOf;
import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.when;

/**
 * Tests the functionality of {@link AutoGeneratedApiErrorService}.
 *
 * @author Andrey Tsarenko
 */
public class AutoGeneratedApiErrorServiceTest {

    @Test
    public void findAutoGeneratedApiErrors() {
        ApiErrorValidationMessagesMapper apiErrorValidationMessagesMapper = new ApiErrorValidationMessagesMapper();
        AutoGeneratedApiErrorService autoGeneratedApiErrorService =
                new AutoGeneratedApiErrorService(apiErrorValidationMessagesMapper);
        ApiError expectedApiError = new AutoGeneratedApiError("messageValue", "errorCodeValue", 400);

        assertThat(autoGeneratedApiErrorService.findAutoGeneratedApiErrors())
                .containsOnly(expectedApiError);
    }

    @Test(expected = AutoGeneratedApiErrorServiceException.class)
    public void findAutoGeneratedApiErrorsFailed() {
        ApiErrorValidationMessagesMapper apiErrorValidationMessagesMapper = mock(ApiErrorValidationMessagesMapper.class);
        AutoGeneratedApiErrorService autoGeneratedApiErrorService =
                new AutoGeneratedApiErrorService(apiErrorValidationMessagesMapper);

        when(apiErrorValidationMessagesMapper.mapToValidationMessageProperties(anySetOf(AutoGeneratedApiError.class)))
                .thenThrow(new RuntimeException("test exception"));

        autoGeneratedApiErrorService.findAutoGeneratedApiErrors();
    }

}
