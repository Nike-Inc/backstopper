package com.nike.backstopper.mapper;

import com.nike.backstopper.exception.ApiErrorValidationMessagesMapperException;
import com.nike.backstopper.model.AutoGeneratedApiError;
import org.junit.Test;

import java.util.HashSet;
import java.util.Set;

import static org.assertj.core.api.Assertions.assertThat;

/**
 * Tests the functionality of {@link ApiErrorValidationMessagesMapper}.
 *
 * @author Andrey Tsarenko
 */
public class ApiErrorValidationMessagesMapperTest {

    public static final AutoGeneratedApiError API_ERROR_WITH_CUSTOM_MESSAGE =
            new AutoGeneratedApiError("message", "errorCode", 400);
    // should be overridden by custom ValidationMessages.properties
    public static final AutoGeneratedApiError API_ERROR_WITH_OVERRIDDEN_PROPERTY_MESSAGE =
            new AutoGeneratedApiError("{org.hibernate.validator.constraints.NotBlank.message}", "errorCode", 400);
    // should be mapped to org/hibernate/validator/ValidationMessages.properties
    public static final AutoGeneratedApiError API_ERROR_WITH_DEFAULT_PROPERTY_MESSAGE =
            new AutoGeneratedApiError("{javax.validation.constraints.NotNull.message}", "errorCode", 400);

    public static final AutoGeneratedApiError EXPECTED_API_ERROR_WITH_CUSTOM_MESSAGE =
            new AutoGeneratedApiError("message", "errorCode", 400);
    public static final AutoGeneratedApiError EXPECTED_API_ERROR_WITH_OVERRIDDEN_PROPERTY_MESSAGE =
            new AutoGeneratedApiError("custom @NotBlank message", "errorCode", 400);
    public static final AutoGeneratedApiError EXPECTED_API_ERROR_WITH_DEFAULT_PROPERTY_MESSAGE =
            new AutoGeneratedApiError("may not be null", "errorCode", 400);

    private final ApiErrorValidationMessagesMapper apiErrorValidationMessagesMapper = new ApiErrorValidationMessagesMapper();

    @Test
    public void mapToValidationMessageProperties() {
        HashSet<AutoGeneratedApiError> autoGeneratedApiErrors = new HashSet<>();
        autoGeneratedApiErrors.add(API_ERROR_WITH_CUSTOM_MESSAGE);
        autoGeneratedApiErrors.add(API_ERROR_WITH_OVERRIDDEN_PROPERTY_MESSAGE);
        autoGeneratedApiErrors.add(API_ERROR_WITH_DEFAULT_PROPERTY_MESSAGE);

        HashSet<AutoGeneratedApiError> expectedAutoGeneratedApiErrors = new HashSet<>();
        expectedAutoGeneratedApiErrors.add(EXPECTED_API_ERROR_WITH_CUSTOM_MESSAGE);
        expectedAutoGeneratedApiErrors.add(EXPECTED_API_ERROR_WITH_OVERRIDDEN_PROPERTY_MESSAGE);
        expectedAutoGeneratedApiErrors.add(EXPECTED_API_ERROR_WITH_DEFAULT_PROPERTY_MESSAGE);

        Set<AutoGeneratedApiError> mappedApiErrors =
                apiErrorValidationMessagesMapper.mapToValidationMessageProperties(autoGeneratedApiErrors);

        assertThat(mappedApiErrors).isEqualTo(expectedAutoGeneratedApiErrors);
    }

    @Test(expected = ApiErrorValidationMessagesMapperException.class)
    public void mapToValidationMessagePropertiesFailed() {
        apiErrorValidationMessagesMapper.mapToValidationMessageProperties(null);
    }

}
